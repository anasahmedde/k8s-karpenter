apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values:
            - t3a.medium
            - t3a.large
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h # 30 * 24h = 720h
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 2m
    budgets:
      - nodes: "10%"
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  role: "KarpenterNodeRole-carbon-qdrant-myaskai-blue"
  amiFamily: AL2
  amiSelectorTerms:
    - id: ami-0180cf1053ef6ce12
#    - alias: "al2023@v20250317"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "carbon-qdrant-myaskai-blue"
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "carbon-qdrant-myaskai-blue"
  metadataOptions:
    httpTokens: required
    httpPutResponseHopLimit: 2
    httpEndpoint: enabled
  kubelet:
    evictionHard:
      memory.available: "200Mi"
    evictionSoft:
      memory.available: "500Mi"
    evictionSoftGracePeriod:
      memory.available: "1m"
